name: Build and Test
on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:

jobs:
  api_test:
    name: API Tests
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}/go
      GOBIN: ${{ github.workspace }}/go/bin
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/rotationalio/whisper
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.x

      - name: Cache Speedup
        uses: actions/cache@v3
        with:
          path: ${{ env.GOPATH }}/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          path: ${{ env.GOPATH }}/src/github.com/rotationalio/whisper

      - name: Install Staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@v0.4.3

      - name: Lint Go Code
        run: staticcheck ./...

      - name: Install Dependencies
        run: go version

      - name: Run Unit Tests
        run: go test -v -coverprofile=coverage.txt -covermode=atomic --race ./...

  api_build:
    name: API Build
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}/go
      GOBIN: ${{ github.workspace }}/go/bin
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/rotationalio/whisper
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.x

      - name: Cache Speedup
        uses: actions/cache@v3
        with:
          path: ${{ env.GOPATH }}/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          path: ${{ env.GOPATH }}/src/github.com/rotationalio/whisper

      - name: Install Dependencies
        run: go version

      - name: Build
        run: go build ./cmd/...

  web_test:
    name: Web Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x.x
          cache: "yarn"
          cache-dependency-path: ./web/yarn.lock

      - name: Install Dependencies
        working-directory: ./web
        run: yarn

      - name: Lint React Code
        working-directory: ./web
        run: yarn lint

      - name: Run React Tests
        working-directory: ./web
        run: yarn test

  web_build:
    name: Web Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x.x
          cache: "yarn"
          cache-dependency-path: ./web/yarn.lock

      - name: Install Dependencies
        working-directory: ./web
        run: yarn

      - name: Build React Bundle
        working-directory: ./web
        run: yarn build
